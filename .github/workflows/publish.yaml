name: publish
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  setup:
    runs-on: ubuntu-latest
    # runs only the branch name starts with 'release/v' and the pull request is merged.
    if: startsWith(github.head_ref, 'releases/v') && github.event.pull_request.merged == true
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Git Tag name
        id: vars
        run: |
          echo "tag=${GITHUB_HEAD_REF##*/v}" >> $GITHUB_OUTPUT
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.vars.outputs.tag }}
          release_name: Release v${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false

  publish:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      tag: ${{ needs.setup.outputs.tag }}
      upload_url: ${{ needs.setup.outputs.upload_url }}
    steps:
      - uses: extractions/setup-just@v3
        with:
          just-version: '1.40.0'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Initialize Git
        shell: bash
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "action@github.com"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Create distribution files.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just make_distribution_files
          just upload_assets v${{ needs.setup.outputs.tag }}
docker:
  needs: publish
  runs-on: ubuntu-latest
  permissions:
    packages: write
    contents: read
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        # ${{ github.repository }} = sorahashiroi/difson
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest
          type=sha,prefix=,suffix=,format=short
          type=raw,value=${{ needs.publish.outputs.tag }}$
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout the project
      uses: actions/checkout@v4
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from:
          -type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
        cache-to:
          type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max

